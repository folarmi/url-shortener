{"version":3,"sources":["images/logo.svg","images/illustration-working.svg","images/icon-brand-recognition.svg","images/icon-detailed-records.svg","images/icon-fully-customizable.svg","images/icon-facebook.svg","images/icon-twitter.svg","images/icon-pinterest.svg","images/icon-instagram.svg","Components/Header.js","Components/Content.js","Components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","src","logo","alt","background","Content","initialState","JSON","parse","window","localStorage","getItem","useState","link","setLink","setLinks","linkArr","setLinkArr","copySuccess","setCopySuccess","useEffect","setItem","stringify","textAreaRef","useRef","copyToClipboard","e","current","select","document","execCommand","target","focus","onSubmit","event","preventDefault","fetch","method","headers","body","url","then","response","json","data","returnedData","type","label","name","placeholder","onChange","value","map","key","objectID","ref","hashid","style","backgroundColor","onClick","brand","record","custom","backgroundImage","Footer","facebook","twitter","pinterest","instagram","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9187b74f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.6387840f.svg\";","module.exports = __webpack_public_path__ + \"static/media/illustration-working.5029d049.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-brand-recognition.1922b68a.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-detailed-records.e3d9caa9.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-fully-customizable.cc099cea.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-facebook.7febcff9.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-twitter.cb4fea0b.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-pinterest.c557c3d4.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-instagram.996b697c.svg\";","import React from 'react'\r\nimport logo from '../images/logo.svg'\r\nimport background from '../images/illustration-working.svg'\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className=\"lg:ml-48\">\r\n                <header>\r\n                        <img src={logo} alt=\"Shortly logo\" className=\"p-4\"/>\r\n                </header>\r\n\r\n                <div className=\"lg:flex lg:flex-row-reverse\">\r\n\r\n                    <div className=\"text-center\" >\r\n                        <img src={background} alt=\"\" className=\"ml-24 md:ml-72\"/>\r\n                    </div>\r\n\r\n                        <div className=\"lg:bg-pink\">\r\n                                <h1 className=\"text-3xl lg:mt-24 text-dark font-bold lg:bg-yellow lg:text-6xl\">More than just shorter links</h1>\r\n                                <p>Build your brand's recognition and get detailed insight on how your links are performing</p>\r\n                                <button className=\"bg-cyan mt-4 mb-20 text-white \r\n                                font-bold py-2 px-4 rounded-full\">Get started</button>\r\n                        </div>\r\n\r\n                    </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Header","import React, { useState, useRef, useEffect } from 'react';\r\nimport brand from '../images/icon-brand-recognition.svg';\r\nimport record from '../images/icon-detailed-records.svg';\r\nimport custom from '../images/icon-fully-customizable.svg';\r\n\r\n\r\n\r\nfunction Content() {\r\n    const initialState = JSON.parse(window.localStorage.getItem('linkArr'))\r\n    const [link, setLink] = useState(\"\");\r\n    const [links, setLinks] = useState({});\r\n    const [linkArr, setLinkArr] = useState(initialState || []);\r\n    const [copySuccess, setCopySuccess] = useState('Copy');\r\n\r\n    useEffect(() => {\r\n        window.localStorage.setItem('linkArr', JSON.stringify(linkArr));\r\n        // console.log('works')\r\n    },[linkArr])\r\n\r\n    const textAreaRef = useRef(null);\r\n\r\n    function copyToClipboard(e) {\r\n        textAreaRef.current.select();\r\n        document.execCommand('copy');\r\n        e.target.focus();\r\n        setCopySuccess('Copied!')\r\n    }\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        if (link === \"\") {\r\n            return \"work\"\r\n        } else {\r\n        fetch('https://rel.ink/api/links/', {\r\n            method: 'Post',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                url: link\r\n            })\r\n        })\r\n            .then(response => response.json())\r\n            .then((data) => {\r\n                let returnedData = data;\r\n                setLinks(returnedData);\r\n                setLinkArr([...linkArr, returnedData])\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"text-center\">\r\n\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"bg-dark rounded-lg h-32 ml-6 mr-6 mt-18 lg:ml-40 lg:mt-10 lg:w-3/4\">\r\n                    <input type=\"text\" label={'link'} name={'link'} placeholder=\"Shorten a link here\" className=\"w-64 h-12 mt-8 rounded text-center lg:w-3/4\" onChange={e => setLink(e.target.value)} />\r\n\r\n                    <button className=\"bg-cyan hover:bg-blue-700 text-white font-bold rounded mt-4 w-32 p-2 lg:ml-6\" type=\"submit\">Shorten it!</button>\r\n                </div>\r\n            </form>\r\n\r\n            <ul className=\"mt-8\">\r\n            {linkArr.map (link => (\r\n                <li key={link.objectID}>\r\n                       <li>{link.url}</li>\r\n\r\n                       <textarea ref={textAreaRef} \r\n                            value={\"https://rel.ink/\" + link.hashid} \r\n                            onChange={e => setCopySuccess(e.target.value)}>\r\n                            {\"https://rel.ink/\" + link.hashid}\r\n                       </textarea>\r\n\r\n                       <button className=\"bg-cyan text-white font-bold rounded mt-4 w-32 p-2\" style={{\r\n                        backgroundColor: (copySuccess === \"Copy\") ? 'hsl(180, 66%, 49%)' : ' hsl(257, 27%, 26%'\r\n                       }}\r\n                       onClick={copyToClipboard}>{copySuccess}</button>\r\n                </li>\r\n            ))}\r\n            </ul>\r\n\r\n\r\n            <div className=\"bg-gray\">\r\n                <div>\r\n                    <h1 className=\"text-3xl font-bold p-8\">Advanced Statistics</h1>\r\n                    <p>Track how your links are performing across the web with our advanced statistics dashboard.</p>\r\n                </div>\r\n            \r\n            <div className=\"lg:flex lg:ml-48\">\r\n                <div className=\"bg-white m-6 h-64 rounded p-2\">\r\n                    <img src={brand} alt=\"\" className=\"bg-dark p-4 rounded-full ml-32 mb-4 lg:ml-4\" />\r\n                    <h3 className=\"text-xl font-bold mb-4\">Brand Recognition</h3>\r\n                    <p>Boost your brand recognition with each click. Generic links don;t mean a thing. Branded links help instill confidence in your content.</p>\r\n                </div>\r\n\r\n                <div className=\"bg-white m-6 h-64 rounded p-2 lg:mt-16\">\r\n                    <img src={record} alt=\"\" className=\"bg-dark p-4 rounded-full ml-32 lg:ml-4\" />\r\n                    <h3 className=\"text-xl font-bold mb-4\">Detailed Records</h3>\r\n                    <p>Gain insights into who is clicking your links. Knowing when people engage with your content helps inform better decisions.</p>\r\n                </div>\r\n\r\n                <div className=\"bg-white m-6 h-64 rounded p-2 lg:mt-24\">\r\n                    <img src={custom} alt=\"\" className=\"bg-dark p-4 rounded-full ml-32 lg:ml-4\" />\r\n                    <h3 className=\"text-xl font-bold mb-4\">Fully Customizable</h3>\r\n                    <p className=\"p-2\">Improve brand awareness and content discoverability through customizable links, supercharging audience engagement.</p>\r\n                </div>\r\n            </div>\r\n\r\n                <div className=\"bg-no-repeat bg-center bg-dark h-64\"\r\n                    style={{\r\n                        backgroundImage: `url(\"../images/bg-boost-mobile.svg\")`\r\n                    }}>\r\n                    <h3 className=\"text-white text-3xl font-bold pt-16\">Boost your links today</h3>\r\n                    <button className=\"bg-cyan mt-4 text-white font-bold py-2 px-4 rounded-full w-40\">Get started</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Content","import React from 'react';\r\nimport logo from '../images/logo.svg';\r\nimport facebook from '../images/icon-facebook.svg';\r\nimport twitter from '../images/icon-twitter.svg';\r\nimport pinterest from '../images/icon-pinterest.svg';\r\nimport instagram from '../images/icon-instagram.svg';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <header>\r\n            <div className=\"bg-violet text-center lg:flex lg:justify-around\">\r\n\r\n                <div>\r\n                    <img src={logo} alt=\"\" className=\"ml-32 pt-4 mb-6\"/>\r\n                </div>    \r\n\r\n                    <div>\r\n                        <h3 className=\"text-white text-xl font-bold mt-4 mb-4\">Features</h3>\r\n                            <ul className=\"text-gray\">\r\n                                <li>Link Shortening</li>\r\n                                <li>Branded Links</li>\r\n                                <li>Analytics</li>\r\n                            </ul>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <h3 className=\"text-white text-xl font-bold mt-4 mb-4\">Resources</h3>\r\n                            <ul className=\"text-gray\">\r\n                                <li>Blog</li>\r\n                                <li>Developers</li>\r\n                                <li>Support</li>\r\n                            </ul>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <h3 className=\"text-white text-xl font-bold mt-4 mb-4\">Company</h3>\r\n                            <ul className=\"text-gray\">\r\n                                <li>About</li>\r\n                                <li>Our Team</li>\r\n                                <li>Careers</li>\r\n                                <li>Contact</li>\r\n                            </ul>\r\n                    </div>\r\n\r\n                    <div className=\"flex ml-8 p-16 justify-around\">\r\n                        <img src={facebook} alt=\"\"/>\r\n                        <img src={twitter} alt=\"\"/>\r\n                        <img src={pinterest} alt=\"\"/>\r\n                        <img src={instagram} alt=\"\"/>\r\n                    </div>\r\n\r\n\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Footer","import React from 'react';\nimport Header from './Components/Header';\nimport Content from './Components/Content'\nimport Footer from './Components/Footer'\n\n\nfunction App() {\n  return (\n    <div className=\"overflow-hidden  md:mt-8\">\n      <Header></Header>\n      <Content></Content>\n      <Footer></Footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './tailwind.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}